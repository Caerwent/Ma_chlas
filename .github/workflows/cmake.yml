name: CMake

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
   
    strategy:
      matrix:
        # os: [windows-latest, macos-latest, ubuntu-18.04]
        os: [ubuntu-18.04]
        ARCH: [x86_64, i386]
        include:
           - os: ubuntu-18.04
             build_script: make_linux.sh
             qtInstallHost: 'linux'
             artifact: Atalierou
    
    runs-on: ${{ matrix.os }}       
    steps:
    - uses: actions/checkout@v2
    
    - name: Cache Qt
      id: cache-qt
      uses: actions/cache@v1  # not v2!
      with:
        path: ${{github.workspace}}/Qt
        key: ${{ runner.os }}-QtCache
        
    - name: Install Qt
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: '6.2.2'
        host: ${{matrix.qtInstallHost}} 
        target: 'desktop'
        setup-python: 'false'
        modules: 'all'
    #    modules: 'qtshadertools qtmultimedia qtquick3d qt5compat qtsvg qtimageformats qtbase'
    
    - name: launch make script
      run: |
        ${{matrix.build_script}}
    
    - name: Archive artifacts
      uses: actions/upload-artifact@v2
      with:
        name: Atalierou-1.0.0-${{matrix.ARCH}}.AppImage  
