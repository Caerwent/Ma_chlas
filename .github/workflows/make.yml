name: Build Atalierou

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  IS_RELEASE: ${{ startsWith(github.ref, 'refs/tags/v') }}
  IS_SNAPSHOT: ${{ !startsWith(github.ref, 'refs/tags/v') }}
  
jobs:
  version:
    name: "Determine version"
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.get-version.outputs.version }}
      release: ${{ steps.get-version.outputs.release }}

    steps:
    - name: "Get version"
      id: get-version
      run: |
        if [[ "$IS_RELEASE" == 'true' ]]; then echo "::set-output name=version::${GITHUB_REF:11}" ; fi
        if [[ "$IS_RELEASE" != 'true' ]]; then echo "::set-output name=version::$(date "+%Y.%m.%d")" ; fi
        echo "::set-output name=release::${IS_RELEASE}"
        
        
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    needs: version

    env:
      CURRENT_VERSION: ${{ needs.version.outputs.version }}
      
    strategy:
      matrix:
        # os: [windows-latest, macos-latest, ubuntu-18.04]
        os: [ubuntu-latest, macos-latest]
        # ARCH: [x86_64, i386]
        ARCH: [x86_64]
        include:
           - os: ubuntu-latest
             build_script: ./make_linux.sh
             qtInstallHost: 'linux'
             artifact: Atalierou_${{env.CURRENT_VERSION}}_${{matrix.ARCH}}.AppImage 
           - os: macos-latest
             build_script: ./make_macos.sh
             qtInstallHost: 'mac'
             artifact: Atalierou_${{env.CURRENT_VERSION}}_macos_${{matrix.ARCH}}.dmg 
    
    runs-on: ${{ matrix.os }}       
    steps:
    - uses: actions/checkout@v2
    
    - name: "Cache Qt"
      id: cache-qt
      uses: actions/cache@v1  # not v2!
      with:
        path: ../Qt
        key: ${{ runner.os }}-QtCache
        
    - name: "Install Qt"
      uses: jurplel/install-qt-action@v2
      with:
        cached: ${{ steps.cache-qt.outputs.cache-hit }}
        version: '6.2.2'
        host: ${{matrix.qtInstallHost}} 
        target: 'desktop'
        setup-python: 'false'
        modules: 'all'
    #    modules: 'qtshadertools qtmultimedia qtquick3d qt5compat qtsvg qtimageformats qtbase'
    
    
    - name: "launch make script"
      working-directory: .
      env:
        QT_DIR: ${{env.Qt6_DIR}}
      run: ${{matrix.build_script}}
    
    - name: "Archive artifacts"
      uses: actions/upload-artifact@v2
      with:
        name: ${{matrix.artifact}} 
        path: ${{matrix.artifact}} 
        
    - name: "Release"
      uses: softprops/action-gh-release@v1
      if: startsWith(github.ref, 'refs/tags/')
      with:
        files: ${{matrix.artifact}} 
